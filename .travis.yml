language: python
python: 3.7
cache:
  ccache: true
  directories:
  - $HOME/.cache
  - $HOME/.ccache
env:
  global:
  - PYTEST_WORKERS="auto"
  - secure: EkWLZhbrp/mXJOx38CHjs7BnjXafsqHtwxPQrqWy457VDFWhIY1DMnIR/lOWG+a20Qv52sCsFtiZEmMfUjf0pLGXOqurdxbYBGJ7/ikFLk9yV2rDwiArUlVM9bWFnFxHvdz9zewBH55WurrY4ShZWyV+x2dWjjceWG5VpWeI6sA=
git:
  depth: false
matrix:
  fast_finish: true
  include:
  - dist: bionic
    python: 3.9-dev
    env:
    - JOB="3.9-dev" PATTERN="(not slow and not network and not clipboard)"
  - env:
    - JOB="3.8" ENV_FILE="ci/deps/travis-38.yaml" PATTERN="(not slow and not network
      and not clipboard)"
  - env:
    - JOB="3.7" ENV_FILE="ci/deps/travis-37.yaml" PATTERN="(not slow and not network
      and not clipboard)"
  - arch: arm64
    env:
    - JOB="3.7, arm64" PYTEST_WORKERS=8 ENV_FILE="ci/deps/travis-37-arm64.yaml" PATTERN="(not
      slow and not network and not clipboard)"
  - env:
    - JOB="3.7, locale" ENV_FILE="ci/deps/travis-37-locale.yaml" PATTERN="((not slow
      and not network and not clipboard) or (single and db))" LOCALE_OVERRIDE="zh_CN.UTF-8"
      SQL="1"
    services:
    - mysql
    - postgresql
  - env:
    - JOB="3.7, coverage" ENV_FILE="ci/deps/travis-37-cov.yaml" PATTERN="((not slow
      and not network and not clipboard) or (single and db))" PANDAS_TESTING_MODE="deprecate"
      COVERAGE=true SQL="1"
    services:
    - mysql
    - postgresql
  allow_failures:
  - arch: arm64
    env:
    - JOB="3.7, arm64" PYTEST_WORKERS=8 ENV_FILE="ci/deps/travis-37-arm64.yaml" PATTERN="(not
      slow and not network and not clipboard)"
  - dist: bionic
    env:
    - JOB="3.9-dev" PATTERN="(not slow and not network and not clipboard)"
before_install:
- echo "before_install"
- python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL);
  fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
- source ci/travis_process_gbq_encryption.sh
- export PATH="$HOME/miniconda3/bin:$PATH"
- df -h
- pwd
- uname -a
- git --version
- ./ci/check_git_tags.sh
- export BOTO_CONFIG=/dev/null
install:
- echo "install start"
- ci/prep_cython_cache.sh
- ci/setup_env.sh
- ci/submit_cython_cache.sh
- echo "install done"
script:
- echo "script start"
- echo "$JOB"
- if [ "$JOB" != "3.9-dev" ]; then source activate pandas-dev; fi
- ci/run_tests.sh
after_script:
- echo "after_script start"
- source activate pandas-dev && pushd /tmp && python -c "import pandas; pandas.show_versions();"
  && popd
- ci/print_skipped.py
- echo "after_script done"
before_script:
- bash test_mypy.sh
